FROM arm32v7/debian:buster-slim

# Install xbuild. Qemu must come from: https://github.com/balena-io/qemu.git
COPY ./xbuild/bin/qemu-arm-static /usr/bin/qemu-arm-static
COPY ./xbuild/bin/xbuild /usr/bin/xbuild

# Switch sh for the xbuild wrapper
RUN mv /bin/sh /bin/sh.real && ln -s /usr/bin/xbuild /bin/sh
RUN ["xbuild", "start"]

ARG DEBIAN_FRONTEND=noninteractive

# Install build-tools and development libraries
#RUN echo "deb http://ftp.debian.org/debian stretch-backports main" > /etc/apt/sources.list.d/backports.list
# use install -t stretch-backports to use the backports
RUN apt update -q
RUN apt upgrade -y
RUN apt install -y sudo wget build-essential git cmake ninja-build clang
RUN apt install -y libboost-all-dev qtbase5-dev qttools5-dev libflac-dev libopus-dev libsoxr-dev
RUN apt install -y doxygen imagemagick
RUN apt-get clean

WORKDIR /tmp

# Have clang-9 instead of clang-6
RUN wget -qO- http://releases.llvm.org/9.0.0/clang+llvm-9.0.0-armv7a-linux-gnueabihf.tar.xz | tar xJ
RUN cp -ar clang+llvm-9.0.0-armv7a-linux-gnueabihf/* /usr
RUN rm -rf clang+llvm-9.0.0-armv7a-linux-gnueabihf

RUN update-alternatives --install /usr/bin/cc cc /usr/bin/clang 100
RUN update-alternatives --install /usr/bin/c++ c++ /usr/bin/clang++ 100

# Catch2 is not yet in the repo:
RUN git clone --depth 1 https://github.com/catchorg/Catch2.git catch2; exit 0
RUN cmake -H./catch2 -B./catch2/build -DBUILD_TESTING=OFF -DCMAKE_INSTALL_PREFIX=/usr
RUN cmake --build ./catch2/build -- install
RUN rm -rf ./catch2

# Match user/group of the travis CI, so volumes show up with correct rights
RUN groupadd -g 2000 travis && useradd -g travis -u 2000 travis && echo "travis:travis" | chpasswd
RUN mkdir -p /home/travis && chown -R travis:travis /home/travis && usermod -aG wheel travis

# And one that matches the first user of a debian system
RUN groupadd -g 1000 me && useradd -g me -u 1000 me && echo "me:me" | chpasswd
RUN mkdir -p /home/me && chown -R me:me /home/me && usermod -aG wheel me

WORKDIR /home/travis
USER travis

COPY ./raspbian-lsb-release /usr/bin/lsb_release

# Stop the cross-build, so cross-build can be controlled by other users as well
# (otherwise root would own the lock /tmp/__xbuild__)
#RUN ["xbuild", "stop"]
