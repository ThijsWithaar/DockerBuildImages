# escape=`

FROM mcr.microsoft.com/windows/servercore:ltsc2019
#FROM mcr.microsoft.com/dotnet/framework/sdk:4.8-windowsservercore-ltsc2019

# Install Chocolatey
RUN powershell -NoProfile -InputFormat None -ExecutionPolicy Bypass -Command `
    "iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))"
RUN refreshenv

RUN choco install --no-progress -y imagemagick.app doxygen.install git

# Install C++ development tools
RUN "%TEMP%\vs_community.exe"  --quiet --wait --norestart --noUpdateInstaller \
    --add Microsoft.VisualStudio.Component.VC.Tools.x86.x64 \
    --add Microsoft.VisualStudio.ComponentGroup.VC.Tools.142.x86.x64 \
    --add Microsoft.VisualStudio.Component.Windows10SDK
RUN del %TEMP%\* /S /Q
	--add Microsoft.VisualStudio.Workload.VCTools;includeRecommended `
	--add Microsoft.VisualStudio.Component.Windows10SDK.20348 `
	|| IF "%ERRORLEVEL%"=="3010" EXIT 0) && del /q vs.exe
# Check if it installed correctly
#RUN dir "C:/VisualStudio"
#RUN dir "C:/VisualStudio/Common7/Tools" & exit 0
#RUN dir "C:/VisualStudio/VC/Auxiliary/Build" & exit 0

RUN dir "C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Auxiliary/Build"
#RUN refreshenv
#RUN set

#ENV VCVARS=C:/VisualStudio/VC/Auxiliary/Build/vcvars64.bat
#ENV VCVARS=C:/VisualStudio/Common7/Tools/VsDevCmd.bat -arch=amd64
ENV VCVARS="C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Auxiliary/Build/vcvars64.bat"
RUN (start /w "%VCVARS%")
#ENTRYPOINT [ "CMD", "/k", "C:/VisualStudio/VC/Auxiliary/Build/vcvars64.bat" ]

# Setup Vcpkg
ENV VCPKG_ROOT=C:/tools/vcpkg
ENV VCPKG_CACHE=C:/tools/vcpkg.cache
ENV VCPKG_DEFAULT_TRIPLET=x64-windows
ENV VCPKG_BINARY_SOURCES=clear;files,%VCPKG_CACHE%,readwrite
ENV VCPKG_REF=408ffb232c30189278a3deb30fb51622036692d5

RUN git clone https://github.com/Microsoft/vcpkg.git %VCPKG_ROOT%
RUN git -C %VCPKG_ROOT% checkout %VCPKG_REF%
RUN %VCPKG_ROOT%\bootstrap-vcpkg.bat
RUN "%VCVARS%" && %VCPKG_ROOT%/vcpkg integrate install

# Pre-compile some common libraries, keep the results in %VCPKG_CACHE%
RUN %VCPKG_ROOT%\vcpkg.exe install boost[*] catch2 fmt gtest pybind11 zlib
RUN %VCPKG_ROOT%\vcpkg.exe install qt5-base qt5-connectivity qt5-declarative qt5-serialbus qt5-tools
RUN %VCPKG_ROOT%\vcpkg.exe install eigen3 ffmpeg libftdi libusb nlohmann-json opencl openssl pugixml

# Cleanp up intermediate build files
RUN git reset --hard %VCPKG_REF%
RUN %VCPKG_ROOT%\bootstrap-vcpkg.bat
RUN %VCPKG_ROOT%\vcpkg.exe integrate install
